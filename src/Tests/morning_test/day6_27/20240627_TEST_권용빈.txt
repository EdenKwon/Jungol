-- 참조 타입 --
1. 4
2. 3
3. 2
4. 1
5. 3
6. 3
   5
7. public static void m1 () {
       int[] array = {1, 5, 3, 8, 2};
       int max = 0;

       for(int i=0; i<array.length; i++) {
         if(array[i] > max)
           max = array[i];
       }

       System.out.println(max);
     }

8. public static void m1 () {
       int sum = 0, count = 0;
       double avg = 0.0;
       int[][] array = {
           {95, 86},
           {83, 92, 96},
           {78, 83, 93, 87, 88}
       };


       for(int i=0; i<array.length; i++) {
         for(int j=0; j<array[i].length; j++) {
           sum += array[i][j];
           count++;
         }
       }

       avg = (double) sum / count;
       System.out.println("sum : " + sum + ", avg : "+ avg);
     }

9. public static void m1 () {
       Scanner sc = new Scanner(System.in);
       int stuNum = 0, maxScore = 0, sum = 0;
       double avgScore = 0.0;
       int scores[] = new int[0];

       while(true) {
         System.out.println("-------------------------------------");
         System.out.println("1. 학생수 | 2. 점수입력 | 3.점수리스트 | 4.분석 | 5.종료");
         System.out.println("-------------------------------------");
         System.out.print("선택> ");
         int num = sc.nextInt();

         switch(num) {
           case 1:
             System.out.print("학생수> ");
             stuNum = sc.nextInt();
             scores = new int[stuNum];
             break;
           case 2:
             for(int i=0; i<scores.length; i++) {
               System.out.print("scores[" + i + "]> ");
               scores[i] = sc.nextInt();
             }
             break;
           case 3:
             for(int i=0; i<scores.length; i++) {
               System.out.println("scores[" + i + "]> " + scores[i]);
             }
             break;
           case 4:
             for(int i=0; i<scores.length; i++) {
               if(maxScore < scores[i]) {
                 maxScore = scores[i];
               }

               sum += scores[i];
             }

             avgScore = (double) sum / scores.length;

             System.out.println("최고 점수: " + maxScore);
             System.out.println("평균 점수: " + avgScore);

             break;
           case 5:
             System.out.println("프로그램 종료");
             System.exit(0);
         }
       }
     }

-- 클래스 --
1. 3
2. 4
3. 4
4. 3
5. 1
6. 4
7. 2
8. 2
9. 2
10. 4
11. 3
12. 필드, 생성자, 메소드
13. public class Member {
  public String name;
  public String id;
  public String password;
  public int age;
}
14.public Member(String name, String id) {
  this.name = name;
  this.id = id;
}

15. public class Q16 {

}

public class MemberService {

}